// components/dashboard/EquipmentCard.tsx
'use client'

import { useState } from 'react'
import { MapPin, Star, Clock, Calendar, Plus } from 'lucide-react'
import styles from '@/styles/components/dashboard.module.css'

interface Equipment {
  id: string
  name: string
  code: string
  category: string
  status: 'available' | 'borrowed' | 'maintenance'
  location: string
  rating: number
  description: string
  dueDate?: string
  borrower?: string
  maintenanceUntil?: string
}

interface EquipmentCardProps {
  equipment: Equipment
  onBorrow?: (equipment: Equipment) => void
  onBook?: (equipment: Equipment) => void
  showActions?: boolean // ‡πÉ‡∏´‡∏°‡πà: ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
}

export default function EquipmentCard({ 
  equipment, 
  onBorrow, 
  onBook, 
  showActions = true 
}: EquipmentCardProps) {
  const [showBorrowModal, setShowBorrowModal] = useState(false)
  const [showBookModal, setShowBookModal] = useState(false)

  const handleBorrowClick = () => {
    if (onBorrow) {
      onBorrow(equipment)
    } else {
      setShowBorrowModal(true)
    }
  }

  const handleBookClick = () => {
    if (onBook) {
      onBook(equipment)
    } else {
      setShowBookModal(true)
    }
  }

  const handleConfirmBorrow = () => {
    // Handle borrow confirmation
    alert('‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏¢‡∏∑‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!')
    setShowBorrowModal(false)
  }

  const handleConfirmBook = () => {
    // Handle booking confirmation
    alert('‡∏à‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!')
    setShowBookModal(false)
  }

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'available': return '#4caf50'
      case 'borrowed': return '#ff9800'
      case 'maintenance': return '#f44336'
      default: return '#757575'
    }
  }

  const getStatusText = (status: string) => {
    switch (status) {
      case 'available': return '‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'
      case 'borrowed': return '‡∏ñ‡∏π‡∏Å‡∏¢‡∏∑‡∏°'
      case 'maintenance': return '‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡∏£‡∏±‡∏Å‡∏©‡∏≤'
      default: return '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞'
    }
  }

  return (
    <>
      <div className={styles.equipmentCard}>
        <div className={styles.equipmentCardHeader}>
          <div className={styles.equipmentIcon}>
            üì¶
          </div>
          <div className={styles.equipmentStatus}>
            <span 
              className={styles.statusBadge}
              style={{ backgroundColor: getStatusColor(equipment.status) }}
            >
              {getStatusText(equipment.status)}
            </span>
          </div>
        </div>

        <div className={styles.equipmentCardBody}>
          <h3 className={styles.equipmentName}>{equipment.name}</h3>
          <p className={styles.equipmentCode}>{equipment.code}</p>
          <p className={styles.equipmentCategory}>{equipment.category}</p>
          <p className={styles.equipmentDescription}>{equipment.description}</p>

          <div className={styles.equipmentDetails}>
            <div className={styles.detailItem}>
              <MapPin size={16} />
              <span>{equipment.location}</span>
            </div>
            <div className={styles.detailItem}>
              <Star size={16} />
              <span>{equipment.rating}</span>
            </div>
          </div>

          {equipment.status === 'borrowed' && equipment.dueDate && (
            <div className={styles.warningMessage}>
              <Clock size={16} />
              <span>‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏∑‡∏ô: {new Date(equipment.dueDate).toLocaleDateString('th-TH')}</span>
            </div>
          )}

          {equipment.status === 'maintenance' && equipment.maintenanceUntil && (
            <div className={styles.maintenanceMessage}>
              <span>‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏ñ‡∏∂‡∏á: {new Date(equipment.maintenanceUntil).toLocaleDateString('th-TH')}</span>
            </div>
          )}
        </div>

        {/* Action Buttons - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠ showActions = true ‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ available */}
        {showActions && equipment.status === 'available' && (
          <div className={styles.equipmentCardActions}>
            <button 
              onClick={handleBorrowClick}
              className={styles.borrowButton}
            >
              <Plus size={16} />
              ‡∏¢‡∏∑‡∏°
            </button>
            <button 
              onClick={handleBookClick}
              className={styles.bookButton}
            >
              <Calendar size={16} />
              ‡∏à‡∏≠‡∏á‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤
            </button>
          </div>
        )}

        {/* Borrowed info */}
        {equipment.status === 'borrowed' && equipment.borrower && (
          <div className={styles.borrowerInfo}>
            <span>‡∏¢‡∏∑‡∏°‡πÇ‡∏î‡∏¢: {equipment.borrower}</span>
          </div>
        )}

        {/* Unavailable actions for non-available equipment */}
        {showActions && equipment.status !== 'available' && (
          <div className={styles.equipmentCardActions}>
            {equipment.status === 'borrowed' && (
              <button className={styles.waitingButton} disabled>
                <Clock size={16} />
                ‡∏à‡∏≠‡∏á
              </button>
            )}
            {equipment.status === 'maintenance' && (
              <button className={styles.maintenanceButton} disabled>
                ‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡∏£‡∏±‡∏Å‡∏©‡∏≤
              </button>
            )}
          </div>
        )}
      </div>

      {/* Borrow Modal */}
      {showBorrowModal && (
        <div className={styles.modal}>
          <div className={styles.modalContent}>
            <div className={styles.modalHeader}>
              <h3>‡∏¢‡∏∑‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</h3>
              <button 
                onClick={() => setShowBorrowModal(false)}
                className={styles.closeButton}
              >
                √ó
              </button>
            </div>

            <div className={styles.modalBody}>
              <div className={styles.equipmentSummary}>
                <h4>‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≥‡∏ô‡πâ‡∏≥‡∏£‡πâ‡∏≠‡∏ô</h4>
                <p>HB001</p>
                <p>‡∏´‡πâ‡∏≠‡∏á‡∏ü‡∏¥‡∏™‡∏¥‡πÇ‡∏≠‡πÄ‡∏ò‡∏≠‡∏£‡∏≤‡∏õ‡∏µ</p>
              </div>

              <div className={styles.borrowForm}>
                <div className={styles.formGroup}>
                  <label>‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</label>
                  <textarea 
                    placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°..."
                    className={styles.textarea}
                  />
                </div>

                <div className={styles.formGroup}>
                  <label>‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°</label>
                  <select className={styles.select}>
                    <option value="1">1 ‡∏ß‡∏±‡∏ô</option>
                    <option value="2">2 ‡∏ß‡∏±‡∏ô</option>
                    <option value="3">3 ‡∏ß‡∏±‡∏ô</option>
                    <option value="7">1 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå</option>
                  </select>
                </div>

                <div className={styles.noteBox}>
                  <h5>‡∏Ç‡πâ‡∏≠‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°</h5>
                  <ul>
                    <li>‡∏ô‡∏≥‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏°‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏≤‡∏ô‡πå‡πÄ‡∏ï‡∏≠‡∏£‡πå</li>
                    <li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢</li>
                    <li>‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤</li>
                    <li>‡πÅ‡∏à‡πâ‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏´‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢</li>
                  </ul>
                </div>
              </div>
            </div>

            <div className={styles.modalFooter}>
              <button 
                onClick={() => setShowBorrowModal(false)}
                className={styles.cancelButton}
              >
                ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
              </button>
              <button 
                onClick={handleConfirmBorrow}
                className={styles.confirmButton}
              >
                ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Book Modal */}
      {showBookModal && (
        <div className={styles.modal}>
          <div className={styles.modalContent}>
            <div className={styles.modalHeader}>
              <h3>‡∏à‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</h3>
              <button 
                onClick={() => setShowBookModal(false)}
                className={styles.closeButton}
              >
                √ó
              </button>
            </div>

            <div className={styles.modalBody}>
              <div className={styles.equipmentSummary}>
                <h4>‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≥‡∏ô‡πâ‡∏≥‡∏£‡πâ‡∏≠‡∏ô</h4>
                <p>HB001</p>
                <p>‡∏´‡πâ‡∏≠‡∏á‡∏ü‡∏¥‡∏™‡∏¥‡πÇ‡∏≠‡πÄ‡∏ò‡∏≠‡∏£‡∏≤‡∏õ‡∏µ</p>
              </div>

              <div className={styles.bookingForm}>
                <div className={styles.formGroup}>
                  <label>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ</label>
                  <input 
                    type="date" 
                    className={styles.input}
                    min={new Date().toISOString().split('T')[0]}
                  />
                </div>

                <div className={styles.formRow}>
                  <div className={styles.formGroup}>
                    <label>‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô</label>
                    <select className={styles.select}>
                      <option value="08:00">08:00</option>
                      <option value="09:00">09:00</option>
                      <option value="10:00">10:00</option>
                      <option value="11:00">11:00</option>
                      <option value="13:00">13:00</option>
                      <option value="14:00">14:00</option>
                      <option value="15:00">15:00</option>
                      <option value="16:00">16:00</option>
                    </select>
                  </div>

                  <div className={styles.formGroup}>
                    <label>‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î</label>
                    <select className={styles.select}>
                      <option value="10:00">10:00</option>
                      <option value="11:00">11:00</option>
                      <option value="12:00">12:00</option>
                      <option value="13:00">13:00</option>
                      <option value="15:00">15:00</option>
                      <option value="16:00">16:00</option>
                      <option value="17:00">17:00</option>
                    </select>
                  </div>
                </div>

                <div className={styles.formGroup}>
                  <label>‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</label>
                  <textarea 
                    placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á..."
                    className={styles.textarea}
                  />
                </div>

                <div className={styles.noteBox}>
                  <h5>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏∑‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</h5>
                  <ul>
                    <li>‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á</li>
                    <li>‡∏°‡∏≤‡∏Å‡∏±‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á</li>
                    <li>‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤</li>
                    <li>‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏≤‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 15 ‡∏ô‡∏≤‡∏ó‡∏µ ‡∏à‡∏∞‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</li>
                  </ul>
                </div>
              </div>
            </div>

            <div className={styles.modalFooter}>
              <button 
                onClick={() => setShowBookModal(false)}
                className={styles.cancelButton}
              >
                ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
              </button>
              <button 
                onClick={handleConfirmBook}
                className={styles.confirmButton}
              >
                ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
              </button>
            </div>
          </div>
        </div>
      )}
    </>
  )
}