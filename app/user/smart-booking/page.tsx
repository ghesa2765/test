// app/user/smart-booking/page.tsx
'use client'

import { useState } from 'react'
import { Calendar, Clock, CheckCircle, MapPin, X } from 'lucide-react'
import styles from './smart-booking.module.css'

export default function SmartBookingPage() {
  const [selectedEquipment, setSelectedEquipment] = useState<any>(null)
  const [showModal, setShowModal] = useState(false)
  const [bookingData, setBookingData] = useState({
    date: '',
    startTime: '08:00',
    endTime: '10:00',
    purpose: ''
  })

  const equipment = [
    { 
      id: 'EQ001', 
      code: 'CR001',
      name: '‡πÑ‡∏°‡πâ‡∏Ñ‡πâ‡∏≥‡∏¢‡∏±‡∏ô (‡∏Ñ‡∏π‡πà)', 
      fullName: '‡πÑ‡∏°‡πâ‡∏Ñ‡πâ‡∏≤‡∏¢‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô',
      location: '‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏Å‡πá‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå A',
      available: true,
      icon: 'ü¶Ø'
    },
    { 
      id: 'EQ002', 
      code: 'WK004',
      name: 'Walker 4 ‡∏Ç‡∏≤', 
      fullName: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏î‡∏¥‡∏ô 4 ‡∏Ç‡∏≤ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏á‡∏ï‡∏±‡∏ß',
      location: '‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏ö‡∏≥‡∏ö‡∏±‡∏î',
      available: false,
      icon: 'üö∂'
    },
    { 
      id: 'EQ003', 
      code: 'WK001',
      name: 'Walker 1 ‡∏Ç‡∏≤', 
      fullName: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏î‡∏¥‡∏ô 1 ‡∏Ç‡∏≤ ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏ö‡∏≤ ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏',
      location: '‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏ö‡∏≥‡∏ö‡∏±‡∏î',
      available: true,
      icon: 'üö∂'
    },
    { 
      id: 'EQ004', 
      code: 'CPR001',
      name: '‡∏´‡∏∏‡πà‡∏ô CPR (‡∏ï‡∏±‡∏ß)', 
      fullName: '‡∏´‡∏∏‡πà‡∏ô‡∏ù‡∏∂‡∏Å‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏Ç‡∏±‡πâ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô (CPR) ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏ã‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå',
      location: '‡∏´‡πâ‡∏≠‡∏á‡∏ù‡∏∂‡∏Å‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥',
      available: true,
      icon: 'ü´Å'
    },
    { 
      id: 'EQ005', 
      code: 'WC001',
      name: '‡∏ß‡∏¥‡∏•‡πÅ‡∏ä‡∏£‡πå', 
      fullName: '‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏î‡πâ',
      location: '‡∏´‡πâ‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ô‡∏≠‡∏Å',
      available: false,
      icon: '‚ôø'
    },
    { 
      id: 'EQ006', 
      code: 'BP001',
      name: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ß‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô', 
      fullName: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ß‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡πÅ‡∏ö‡∏ö‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏• ‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏™‡∏π‡∏á',
      location: '‡∏´‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ',
      available: true,
      icon: 'ü©∫'
    },
    { 
      id: 'EQ007', 
      code: 'EB001',
      name: '‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡∏ß‡∏±‡∏Ñ‡∏ã‡∏µ‡∏ô', 
      fullName: '‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡πÄ‡∏Å‡πá‡∏ö‡∏ß‡∏±‡∏Ñ‡∏ã‡∏µ‡∏ô‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥',
      location: '‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏ß‡∏ä‡∏†‡∏±‡∏ì‡∏ë‡πå',
      available: false,
      icon: 'üíâ'
    },
    { 
      id: 'EQ008', 
      code: 'HB001',
      name: '‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡∏ô‡πâ‡∏≥‡∏£‡πâ‡∏≠‡∏ô', 
      fullName: '‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡∏ô‡πâ‡∏≥‡∏£‡πâ‡∏≠‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏≥‡∏ö‡∏±‡∏î‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏õ‡∏ß‡∏î‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠',
      location: '‡∏´‡πâ‡∏≠‡∏á‡∏ü‡∏¥‡∏™‡∏¥‡πÇ‡∏≠‡πÄ‡∏ò‡∏≠‡∏£‡∏≤‡∏õ‡∏µ',
      available: true,
      icon: 'üî•'
    },
    { 
      id: 'EQ009', 
      code: 'PC001',
      name: '‡∏ß‡∏±‡∏î‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏•', 
      fullName: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ß‡∏±‡∏î‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡πÅ‡∏ö‡∏ö‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏• ‡∏ß‡∏±‡∏î‡∏à‡∏≤‡∏Å‡∏®‡∏µ‡∏£‡∏©‡∏∞‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™',
      location: '‡∏´‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ',
      available: true,
      icon: 'üå°Ô∏è'
    },
    { 
      id: 'EQ010', 
      code: 'TH001',
      name: '‡∏õ‡∏£‡∏≠‡∏ó‡∏ß‡∏±‡∏î‡πÑ‡∏Ç‡πâ', 
      fullName: '‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÇ‡∏°‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÅ‡∏ö‡∏ö‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏• ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏î‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢',
      location: '‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•',
      available: false,
      icon: 'üå°Ô∏è'
    },
    { 
      id: 'EQ011', 
      code: 'IV001',
      name: '‡πÄ‡∏™‡∏≤‡∏ô‡πâ‡∏≥‡πÄ‡∏Å‡∏•‡∏∑‡∏≠', 
      fullName: '‡πÄ‡∏™‡∏≤‡πÅ‡∏Ç‡∏ß‡∏ô‡∏ñ‡∏∏‡∏á‡∏ô‡πâ‡∏≥‡πÄ‡∏Å‡∏•‡∏∑‡∏≠ ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡πÑ‡∏î‡πâ ‡∏°‡∏µ‡∏•‡πâ‡∏≠‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô',
      location: '‡∏´‡πâ‡∏≠‡∏á‡∏â‡∏µ‡∏î‡∏¢‡∏≤',
      available: true,
      icon: 'üíß'
    }
  ]

  const handleEquipmentClick = (item: any) => {
    if (item.available) {
      setSelectedEquipment(item)
      setShowModal(true)
    }
  }

  const handleModalClose = () => {
    setShowModal(false)
    setBookingData({
      date: '',
      startTime: '08:00',
      endTime: '10:00',
      purpose: ''
    })
  }

  const handleConfirmBooking = () => {
    if (bookingData.date && bookingData.purpose.trim()) {
      alert(`‡∏à‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n\n‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå: ${selectedEquipment.fullName}\n‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${new Date(bookingData.date).toLocaleDateString('th-TH')}\n‡πÄ‡∏ß‡∏•‡∏≤: ${bookingData.startTime} - ${bookingData.endTime}\n‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå: ${bookingData.purpose}`)
      handleModalClose()
    } else {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô')
    }
  }

  return (
    <div className={styles.pageContainer}>
      {/* Header */}
      <div className={styles.header}>
        <div className={styles.headerIcon}>
          <Calendar size={28} />
        </div>
        <div className={styles.headerText}>
          <h1>‡∏à‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤</h1>
          <p>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</p>
        </div>
      </div>

      {/* Equipment Selection */}
      <div className={styles.sectionCard}>
        <div className={styles.sectionHeader}>
          <h2>üî∏ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£</h2>
        </div>
        <div className={styles.equipmentGrid}>
          {equipment.map(item => (
            <div
              key={item.id}
              className={`${styles.equipmentCard} ${!item.available ? styles.unavailable : ''}`}
              onClick={() => handleEquipmentClick(item)}
            >
              <div className={styles.equipmentIcon}>{item.icon}</div>
              <div className={styles.equipmentInfo}>
                <h3>{item.name}</h3>
                <p className={styles.equipmentId}>{item.code}</p>
                <div className={styles.equipmentLocation}>
                  <MapPin size={14} />
                  <span>{item.location}</span>
                </div>
              </div>
              <div className={styles.equipmentStatus}>
                {item.available ? (
                  <span className={styles.statusAvailable}>‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ</span>
                ) : (
                  <span className={styles.statusBusy}>‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á</span>
                )}
              </div>
              {item.available && (
                <div className={styles.clickHint}>‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏≠‡∏á</div>
              )}
            </div>
          ))}
        </div>
      </div>

      {/* Booking Modal */}
      {showModal && selectedEquipment && (
        <div className={styles.modalOverlay}>
          <div className={styles.modal}>
            <div className={styles.modalHeader}>
              <h3>‡∏à‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</h3>
              <button className={styles.closeButton} onClick={handleModalClose}>
                <X size={20} />
              </button>
            </div>

            <div className={styles.modalContent}>
              {/* Equipment Info */}
              <div className={styles.equipmentDetails}>
                <h4>{selectedEquipment.fullName}</h4>
                <p>{selectedEquipment.code}</p>
                <p>{selectedEquipment.location}</p>
              </div>

              {/* Date Selection */}
              <div className={styles.formGroup}>
                <label>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ</label>
                <input
                  type="date"
                  value={bookingData.date}
                  onChange={(e) => setBookingData({...bookingData, date: e.target.value})}
                  min={new Date().toISOString().split('T')[0]}
                  className={styles.dateInput}
                />
              </div>

              {/* Time Selection */}
              <div className={styles.timeRow}>
                <div className={styles.formGroup}>
                  <label>‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô</label>
                  <select
                    value={bookingData.startTime}
                    onChange={(e) => setBookingData({...bookingData, startTime: e.target.value})}
                    className={styles.timeSelect}
                  >
                    <option value="08:00">08:00</option>
                    <option value="09:00">09:00</option>
                    <option value="10:00">10:00</option>
                    <option value="11:00">11:00</option>
                    <option value="13:00">13:00</option>
                    <option value="14:00">14:00</option>
                    <option value="15:00">15:00</option>
                    <option value="16:00">16:00</option>
                  </select>
                </div>
                <div className={styles.formGroup}>
                  <label>‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î</label>
                  <select
                    value={bookingData.endTime}
                    onChange={(e) => setBookingData({...bookingData, endTime: e.target.value})}
                    className={styles.timeSelect}
                  >
                    <option value="09:00">09:00</option>
                    <option value="10:00">10:00</option>
                    <option value="11:00">11:00</option>
                    <option value="12:00">12:00</option>
                    <option value="14:00">14:00</option>
                    <option value="15:00">15:00</option>
                    <option value="16:00">16:00</option>
                    <option value="17:00">17:00</option>
                  </select>
                </div>
              </div>

              {/* Purpose */}
              <div className={styles.formGroup}>
                <label>‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</label>
                <textarea
                  value={bookingData.purpose}
                  onChange={(e) => setBookingData({...bookingData, purpose: e.target.value})}
                  placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á..."
                  className={styles.purposeTextarea}
                  rows={3}
                />
              </div>

              {/* Rules */}
              <div className={styles.rulesBox}>
                <h5>‡∏Ç‡πâ‡∏≠‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</h5>
                <ul>
                  <li>‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á</li>
                  <li>‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á</li>
                  <li>‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏≤‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 15 ‡∏ô‡∏≤‡∏ó‡∏µ ‡∏à‡∏∞‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</li>
                </ul>
              </div>
            </div>

            <div className={styles.modalActions}>
              <button 
                className={styles.cancelButton}
                onClick={handleModalClose}
              >
                ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
              </button>
              <button 
                className={styles.confirmButton}
                onClick={handleConfirmBooking}
                disabled={!bookingData.date || !bookingData.purpose.trim()}
              >
                <CheckCircle size={16} />
                ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  )
}